// Copyright (c) 2012 Jean-Luc Spielmann. All Rights Reserved.
// http://getmoai.com

#ifndef MOAIFMODEVENTPROJECT_H
#define MOAIFMODEVENTPROJECT_H

#include <fmod_event.hpp>
#include <moaicore/moaicore.h>

//================================================================//
// MOAIFmodEventProject
//================================================================//
/** @name MOAIFmodEventProject
@text Wrapper class to provide to FMod Designer Event projects.
*/
class MOAIFmodEventProject :
public virtual MOAILuaObject {
private:

//----------------------------------------------------------------//
static int	_cancelAllLoads	( lua_State* L );
static int	_getEvent	( lua_State* L );
static int	_getEventByProjectID	( lua_State* L );
static int	_getGroup	( lua_State* L );
static int	_getGroupByIndex	( lua_State* L );
static int	_getInfo	( lua_State* L );
static int	_getMemoryInfo	( lua_State* L );
static int	_getNumEvents	( lua_State* L );
static int	_getNumGroups	( lua_State* L );
static int	_getUserData	( lua_State* L );
static int	_loadSampleData	( lua_State* L );
static int	_release	( lua_State* L );	
static int	_setUserData	( lua_State* L );
static int	_stopAllEvents	( lua_State* L );

public:

DECL_LUA_FACTORY ( MOAIFmodEventProject )

static const u32 DEFAULT_EVENT	= FMOD_EVENT_DEFAULT;
static const u32 NONBLOCKING_EVENT	= FMOD_EVENT_NONBLOCKING;
static const u32 ERROR_ON_DISCACCESS_EVENT	= FMOD_EVENT_ERROR_ON_DISKACCESS;
static const u32 INFO_ONLY_EVENT	= FMOD_EVENT_INFOONLY;
static const u32 USERDSP_EVENT	= FMOD_EVENT_USERDSP;

static const u32 MAX_NONBLOCKING_THREADS	= FMOD_EVENT_NONBLOCKING_THREAD_MAX;
static const u32 NONBLOCKING_EVENT_THREAD0 = FMOD_EVENT_NONBLOCKING_THREAD0;
static const u32 NONBLOCKING_EVENT_THREAD1 = FMOD_EVENT_NONBLOCKING_THREAD1;
static const u32 NONBLOCKING_EVENT_THREAD2 = FMOD_EVENT_NONBLOCKING_THREAD2;
static const u32 NONBLOCKING_EVENT_THREAD3 = FMOD_EVENT_NONBLOCKING_THREAD3;
static const u32 NONBLOCKING_EVENT_THREAD4 = FMOD_EVENT_NONBLOCKING_THREAD4;

static const u32 MEMBITS_OTHER	= FMOD_MEMBITS_OTHER;
static const u32 MEMBITS_STRING	= FMOD_MEMBITS_STRING;
static const u32 MEMBITS_SYSTEM	= FMOD_MEMBITS_SYSTEM;
static const u32 MEMBITS_PLUGINS	= FMOD_MEMBITS_PLUGINS;
static const u32 MEMBITS_OUTPUT	= FMOD_MEMBITS_OUTPUT;
static const u32 MEMBITS_CHANNEL	= FMOD_MEMBITS_CHANNEL;
static const u32 MEMBITS_CHANNELGROUP	= FMOD_MEMBITS_CHANNELGROUP;
static const u32 MEMBITS_CODEC	= FMOD_MEMBITS_CODEC;
static const u32 MEMBITS_FILE	= FMOD_MEMBITS_FILE;
static const u32 MEMBITS_SOUND	= FMOD_MEMBITS_SOUND;
static const u32 MEMBITS_SECONDARYRAM	= FMOD_MEMBITS_SOUND_SECONDARYRAM;
static const u32 MEMBITS_SOUNDGROUND	= FMOD_MEMBITS_SOUNDGROUP;
static const u32 MEMBITS_STREAMBUFFER	= FMOD_MEMBITS_STREAMBUFFER;
static const u32 MEMBITS_DSPCONNECTION	= FMOD_MEMBITS_DSPCONNECTION;
static const u32 MEMBITS_DSP	= FMOD_MEMBITS_DSP;
static const u32 MEMBITS_DSPCODEC	= FMOD_MEMBITS_DSPCODEC;
static const u32 MEMBITS_PROFILE	= FMOD_MEMBITS_PROFILE;
static const u32 MEMBITS_RECORDBUFFER	= FMOD_MEMBITS_RECORDBUFFER;
static const u32 MEMBITS_REVERB	= FMOD_MEMBITS_REVERB;
static const u32 MEMBITS_REVERBCHANNELPROPS	= FMOD_MEMBITS_REVERBCHANNELPROPS;
static const u32 MEMBITS_GEOMETRY	= FMOD_MEMBITS_GEOMETRY;
static const u32 MEMBITS_SYNCPOINT	= FMOD_MEMBITS_SYNCPOINT;
static const u32 MEMBITS_ALL	= FMOD_MEMBITS_ALL;

static const u32 EVENT_MEMBITS_EVENTSYTEM	= FMOD_EVENT_MEMBITS_EVENTSYSTEM;
static const u32 EVENT_MEMBITS_MUSICSYSTEM	= FMOD_EVENT_MEMBITS_MUSICSYSTEM;
static const u32 EVENT_MEMBITS_FEV	= FMOD_EVENT_MEMBITS_FEV;
static const u32 EVENT_MEMBITS_MEMORYFSB	= FMOD_EVENT_MEMBITS_MEMORYFSB;
static const u32 EVENT_MEMBITS_EVENTPROJECT	= FMOD_EVENT_MEMBITS_EVENTPROJECT;
static const u32 EVENT_MEMBITS_EVENTGROUPI	= FMOD_EVENT_MEMBITS_EVENTGROUPI;
static const u32 EVENT_MEMBITS_SOUNDBANKCLASS	= FMOD_EVENT_MEMBITS_SOUNDBANKCLASS;
static const u32 EVENT_MEMBITS_SOUNDBANKLIST	= FMOD_EVENT_MEMBITS_SOUNDBANKLIST;
static const u32 EVENT_MEMBITS_STREAMINSTANCE	= FMOD_EVENT_MEMBITS_STREAMINSTANCE;
static const u32 EVENT_MEMBITS_SOUNDDEFCLASS	= FMOD_EVENT_MEMBITS_SOUNDDEFCLASS;
static const u32 EVENT_MEMBITS_SOUNDDEFDEFCLASS	= FMOD_EVENT_MEMBITS_SOUNDDEFDEFCLASS;
static const u32 EVENT_MEMBITS_SOUNDDEFPOOL	= FMOD_EVENT_MEMBITS_SOUNDDEFPOOL;
static const u32 EVENT_MEMBITS_REVERBDEF	= FMOD_EVENT_MEMBITS_REVERBDEF;
static const u32 EVENT_MEMBITS_EVENTREVERB	= FMOD_EVENT_MEMBITS_EVENTREVERB;
static const u32 EVENT_MEMBITS_USERPROPERTY	= FMOD_EVENT_MEMBITS_USERPROPERTY;
static const u32 EVENT_MEMBITS_EVENTINSTANCE	= FMOD_EVENT_MEMBITS_EVENTINSTANCE;
static const u32 EVENT_MEMBITS_EVENTINSTANCE_COMPLEX	= FMOD_EVENT_MEMBITS_EVENTINSTANCE_COMPLEX;
static const u32 EVENT_MEMBITS_EVENTINSTANCE_SIMPLE	= FMOD_EVENT_MEMBITS_EVENTINSTANCE_SIMPLE;
static const u32 EVENT_MEMBITS_EVENTINSTANCE_LAYER	= FMOD_EVENT_MEMBITS_EVENTINSTANCE_LAYER;
static const u32 EVENT_MEMBITS_EVENTINSTANCE_SOUND	= FMOD_EVENT_MEMBITS_EVENTINSTANCE_SOUND;
static const u32 EVENT_MEMBITS_EVENTENVELOPE	= FMOD_EVENT_MEMBITS_EVENTENVELOPE;
static const u32 EVENT_MEMBITS_EVENTEVELOPEDEF	= FMOD_EVENT_MEMBITS_EVENTENVELOPEDEF;
static const u32 EVENT_MEMBITS_EVENTPARAMETER	= FMOD_EVENT_MEMBITS_EVENTPARAMETER;
static const u32 EVENT_MEMBITS_EVENTCATEGORY	= FMOD_EVENT_MEMBITS_EVENTCATEGORY;
static const u32 EVENT_MEMBITS_EVENTENVELOPEPOINT	= FMOD_EVENT_MEMBITS_EVENTENVELOPEPOINT;
static const u32 EVENT_MEMBITS_EVENTINSTANCEPOOL	= FMOD_EVENT_MEMBITS_EVENTINSTANCEPOOL;
static const u32 EVENT_MEMBITS_ALL	= FMOD_EVENT_MEMBITS_ALL;
static const u32 EVENT_MEMBITS_EVENTINSTANCEGROUP	= FMOD_EVENT_MEMBITS_EVENTINSTANCE_GROUP;
static const u32 EVENT_MEMBITS_SOUNDDEF_GROUP	= FMOD_EVENT_MEMBITS_SOUNDDEF_GROUP;

//----------------------------------------------------------------//

FMOD::EventProject* mEventProject;

//----------------------------------------------------------------//
MOAIFmodEventProject	();
MOAIFmodEventProject	( FMOD::EventProject* project );
~MOAIFmodEventProject	();
void	RegisterLuaClass	( MOAILuaState& state );
void	RegisterLuaFuncs	( MOAILuaState& state );
void	setEventProject	( FMOD::EventProject* project );
};


#endif //MOAIFMODEVENTPROJECT_H